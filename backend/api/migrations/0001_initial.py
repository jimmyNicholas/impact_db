# Generated by Django 5.1.4 on 2025-01-14 09:13

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Class",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("course", models.CharField(max_length=50)),
                ("class_name", models.CharField(max_length=50)),
                ("teacher_one", models.CharField(blank=True, max_length=50)),
                ("teacher_two", models.CharField(blank=True, max_length=50)),
                ("is_active", models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "student_id",
                    models.CharField(
                        max_length=5,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Number must be between 20000 and 29999",
                                regex="^2[0-9]{4}$",
                            )
                        ],
                    ),
                ),
                ("first_name", models.CharField(max_length=50)),
                ("last_name", models.CharField(max_length=50)),
                ("nickname", models.CharField(blank=True, max_length=50)),
                ("start_date", models.DateField(null=True)),
                ("participation", models.TextField(blank=True)),
                ("teacher_comments", models.TextField(blank=True)),
                ("level_up", models.CharField(blank=True, max_length=50)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "current_class",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="students",
                        to="api.class",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Result",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("week", models.CharField(max_length=2)),
                ("grammar", models.CharField(blank=True, max_length=2, null=True)),
                ("vocabulary", models.CharField(blank=True, max_length=2, null=True)),
                ("reading", models.CharField(blank=True, max_length=2, null=True)),
                ("writing", models.CharField(blank=True, max_length=2, null=True)),
                ("speaking", models.CharField(blank=True, max_length=2, null=True)),
                ("listening", models.CharField(blank=True, max_length=2, null=True)),
                (
                    "pronunciation",
                    models.CharField(blank=True, max_length=2, null=True),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="results",
                        to="api.student",
                    ),
                ),
            ],
        ),
    ]
